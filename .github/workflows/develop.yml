name: deploy pipeline
on:
  push:
    branches:
      - status

concurrency:
  group: develop-deploy
  cancel-in-progress: true

jobs:
  staging:
    name: Deploy to staging & run Cypress
    runs-on: ubuntu-latest
    steps:
      - id: ssh_stg
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.DEV_SSH_HOST }}
          SSH_PORT: ${{ secrets.DEV_SSH_PORT }}
          SSH_USER: ${{ secrets.DEV_SSH_USER }}
          SSH_KEY: ${{ secrets.DEV_SSHE_SSH_KEY }}

      - name: Deploy & test on staging
        run: |
          ssh ${{ steps.ssh_stg.outputs.SERVER }} <<'EOF'
          set -euo pipefail

          # 1) デプロイ（staging）
          bash /app/ryuta_takaki/deploy.sh ryuta_takaki

          # 2) テスト実行ディレクトリへ
          cd /ci

          # 3) Cypress 実行（Chrome 固定）
          npx cypress run --headless --browser chrome --spec "cypress/e2e/ryuta_takaki.*"
          EOF

  production:
    name: Deploy to production
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - id: ssh_prod
        uses: invi5H/ssh-action@v1
        with:
          SSH_HOST: ${{ secrets.PROD_SSH_HOST }}     # ← 本番ホストのみ別
          SSH_PORT: ${{ secrets.DEV_SSH_PORT }}      # ← staging と共通
          SSH_USER: ${{ secrets.DEV_SSH_USER }}      # ← staging と共通
          SSH_KEY: ${{ secrets.PROD_SSH_KEY }}       # ← 本番用秘密鍵（安全のため別）

      - name: Deploy on production
        run: |
          ssh ${{ steps.ssh_prod.outputs.SERVER }} <<'EOF'
          set -euo pipefail
          # 本番デプロイ（スクリプト/引数はあなたの環境に合わせて）
          bash /app/ryuta_takaki/deploy.sh ryuta_takaki
          EOF
